<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<head>
		<title>Bddify Test Result @DateTime.Now.ToShortDateString()</title>
		
		<style type="text/css">
			#main
			{
				margin:auto;
				width:80%;
				background-color:#a0a0e0;
			}
			
			body
			{
				background-color:#606060;
			}
			
			#header
			{
				padding:10px;
				height:60px;
				background-color:#555555;
				color:White;
			}
			
			#summaryBox
			{
				padding:10px;
			}
			
			#testResult
			{
				margin:10px;
			}
			
			table
			{
				width:100%;
				padding:5px;
				border-collapse:collapse;
			}
			
			tbody
			{
				text-align:left
			}
			
			td.Passed
			{
				background-color:Green
			}
			
			td.Failed
			{
				background-color:Red
			}
			
			td.Inconclusive
			{
				background-color:Yellow
			}
			
			td.NotImplemented
			{
				background-color:Yellow
			}
			
			td.NotExecuted
			{
				background-color:Gray
			}
			
			tr.scenario
			{
				cursor:pointer;
			}
			
			th.scenarioHeader
			{
				width:400px    
			}

			th.resultHeader
			{
				width:100px;
			}
			
			th.summaryResult
			{
				width:100px;    
			}
			
			th.summaryCount
			{
				width:100px;    
			}

			td.duration
			{
				width:100px;
			}
			
			td.indentation
			{
				width:30px;
			}
			
			td.result
			{
			    width:150px;
			}
			
			table#summaryTable
			{
				width:250px;
				border-collapse:collapse;
			}
			
			table#summaryTable td
			{
				text-align:left;
			}
		</style>

		<script type="text/javascript" src="jquery-1.4.4.min.js"> </script>
	</head>

	<body>
		<div id="main">
			<div id="header">
				<h2>Bddify Test Result @DateTime.Now.ToShortDateString()</h2>
			</div>

			<div id="summaryBox">
				<p>Summary:</p>

				<table id="summaryTable">
					<thead>
						<tr>
							<td class="summaryResult"></td>
							<td class="summaryCount"></td>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>Passed</td>
							<td>@Model.Count(b => b.Result == Bddify.Core.StepExecutionResult.Passed)</td>
						</tr>
						<tr>
							<td>Failed</td>
							<td>@Model.Count(b => b.Result == Bddify.Core.StepExecutionResult.Failed)</td>
						</tr>
						<tr>
							<td>Inconclusive</td>
							<td>@Model.Count(b => b.Result == Bddify.Core.StepExecutionResult.Inconclusive)</td>
						</tr>
						<tr>
							<td>Not Implemented</td>
							<td>@Model.Count(b => b.Result == Bddify.Core.StepExecutionResult.NotImplemented)</td>
						</tr>
						<tr>
							<td>Not Executed</td>
							<td>@Model.Count(b => b.Result == Bddify.Core.StepExecutionResult.NotExecuted)</td>
						</tr>
					</tbody>
				</table>
			</div>

			<div id="testResult">
				<table>
					<tbody>
						@foreach (var assembly in Model.GroupBy(b => b.Object.GetType().Assembly.CodeBase)) {
							<tr class="assembly">
								<td colspan="4"><strong>Assembly: </strong>@assembly.Key</td>
							</tr>
							foreach (var group in assembly.GroupBy(b => b.Object.GetType().Namespace)){
								<tr class="namespace">
									<td colspan="4"><strong>Class: </strong>@group.Key</td>
								</tr>

								foreach (var bddee in group) {
									<tr class="scenario" id="@bddee.Object.GetType().Name">
										<td class="duration @bddee.Result">@bddee.Duration.Milliseconds (ms)</td>
										<td colspan="2" class="@bddee.Result">@bddee.ScenarioSentence</td>
										<td class="result @bddee.Result">@bddee.Result</td>
									</tr>
									foreach (var step in bddee.Steps) {
                                        string stepClass = "step " + bddee.Object.GetType().Name;
                                        string result = step.ReadableMethodName;
                                        if(step.Exception != null){
                                            stepClass += " hasException";
                                            
                                            if(!string.IsNullOrEmpty(step.Exception.Message)){
                                                result += " (" + step.Exception.Message + ")";
                                            }
                                        }

									    <tr class="@stepClass">
										    <td class="duration"></td>
										    <td colspan="2" class="@step.Result">@result</td>
										    <td class="result @step.Result">@step.Result</td>
									    </tr>

                                        if (step.Exception != null){
									        <tr class="step exceptionDetails @bddee.Object.GetType().Name">
										        <td class="duration"></td>
										        <td class="indentation"></td>
										        <td colspan="2" class="Failed @step.Result">@step.Exception.StackTrace</td>
									        </tr>
                                        }
									}

									<!-- empty row to separate scenarios -->
									<tr class="step @bddee.Object.GetType().Name" style="height:5px">
										<td colspan="3"></td>
									</tr>
								}
							}
						}
					</tbody>
				</table>
			</div>

			<script type="text/javascript">
				$(function () {
					$('tr.step').hide();
					$('tr.scenario').click(function () {
						$('tr.' + $(this).attr('id')).toggle();
					});
				});
			</script>
		</div>
	</body>

</html>